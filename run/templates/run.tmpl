{%- extends "base.tmpl" -%}
{%- import "components.tmpl" as components with context -%}

{%- block slurm_headers -%}
{% if input.slurm_headers -%}
#SLURM HEADERS
#SBATCH --job-name=create_icon_hdpara
#SBATCH --partition=shared
#SBATCH --account=YOUR_ACCOUNT
#SBATCH --ntasks=1
#SBATCH --time=02:00:00
#SBATCH --output=create_icon_hdpara.o%j    # File name for standard output
#SBATCH --error=create_icon_hdpara.e%j     # File name for standard error output
#SBATCH --mail-type=FAIL                   # Notify user by email in case of job failure
#SBATCH --mail-user=YOUR_EMAIL
{%- endif -%}
{%- endblock -%}

{%- block user_commands_start -%}
{{ input.user_commands_start }}
{%- endblock %}

{% block set_variables_pre_user_input -%}
{{ components.set_variables_pre_user_input() }}
{%- endblock -%}

{%- block user_commands_pre_user_input -%}
{{ input.user_commands_pre_user_input }}
{%- endblock -%}

{%- block user_commands_pre_create_project -%}
{%- if input.create_project_at_runtime -%}
{{ input.user_commands_pre_create_project }}
{%- endif -%}
{%- endblock -%}

{%- block create_project -%}
{%- if input.create_project_at_runtime -%}
{{ components.create_project_dirs() }}
{%- endif -%}
{%- endblock -%}

{%- block user_commands_post_create_project -%}
{%- if input.create_project_at_runtime -%}
{{ input.user_commands_post_create_project }}
{%- endif -%}
{%- endblock -%}

{%- block set_variables_post_user_input -%}
{{ components.set_variables_post_user_input() }}
{%- endblock -%}

{%- block user_commands_pre_preproc -%}
{{ input.user_commands_pre_preproc }}
{%- endblock -%}

{%- block preprocessing %}
# Create links to input files
ln -s ${fractional_lsmask_filepath} $(basename ${fractional_lsmask_filepath})
fractional_lsmask_filepath=$(basename ${fractional_lsmask_filepath})
ln -s ${icon_grid_filepath} $(basename ${icon_grid_filepath})
icon_grid_filepath=$(basename ${icon_grid_filepath})
# Pre-processing
if [[ ${binary_conversion_method} == "hfrac" ]]; then
  cdo expr,cell_sea_land_mask='(cell_sea_land_mask > 0.5)' ${fractional_lsmask_filepath} ${binary_lsmask_filepath}
  cdo expr,cell_sea_land_mask='(cell_sea_land_mask > 0.0)' ${fractional_lsmask_filepath} ${max_land_binary_lsmask_filepath}
elif [[ ${binary_conversion_method} == "minl" ]]; then
  cdo expr,cell_sea_land_mask='(cell_sea_land_mask >= 1.0)' ${fractional_lsmask_filepath} ${binary_lsmask_filepath}
  cdo expr,cell_sea_land_mask='(cell_sea_land_mask >  0.0)' ${fractional_lsmask_filepath} ${max_land_binary_lsmask_filepath}
elif [[ ${binary_conversion_method} == "maxl" ]]; then
  cdo expr,cell_sea_land_mask='(cell_sea_land_mask >  0.0)' ${fractional_lsmask_filepath} ${binary_lsmask_filepath}
else
  exit 1
fi

cdo remapbil,${icon_grid_filepath} ${etop01_filepath} ${orography_filepath}
{% endblock -%}

{%- block user_commands_pre_run -%}
{{ input.user_commands_pre_run }}
{%- endblock -%}

{% block run -%}
#Run
{% if input.high_res %}
echo "Not yet implemented!"
{% else %}
if [[ ${binary_conversion_method} == "maxl" ]]; then
  use_hfrac = False
  max_land_binary_lsmask_filepath = null
elif [[ ${binary_conversion_method} == "minl" ]] &&
     [[ ${binary_conversion_method} == "maxl" ]]; then
  use_hfrac = True
else
  exit 1
fi
cmd="${repository_path}/Dynamic_HD_bash_scripts/generate_icon_hdpara_top_level_driver.sh ${orography_filepath} ${binary_lsmask_filepath} ${output_hdpara_filepath} ${output_catchments_filepath} ${output_accumulated_flow_filepath} ${config_filepath} ${working_directory} ${icon_grid_filepath} ${repository_path}/Dynamic_HD_Resources/cotat_plus_standard_params.nl ${icon_atmo_grid_res} False ${use_hfrac} ${maxl_binary_lsmask_filepath} ${true_sinks_filepath}"
echo "Running:"
echo ${cmd}
eval ${cmd}
{% endif %}
{%- endblock -%}

{%- block user_commands_post_run -%}
{{ input.user_commands_post_run }}
{%- endblock -%}

{%- block postprocessing -%}
# Post Processing
# (No post-processing required at present)
{%- endblock -%}

{%- block user_commands_pre_clean -%}
{{ input.user_commands_pre_clean }}
{%- endblock %}

{% block clean_up -%}
# Clean-up
echo "Post run clean-up not yet implemented!"
{%- endblock -%}

{%- block user_commands_end -%}
{{ input.user_commands_end }}
{%- endblock -%}
